<?xml version="1.0" encoding="utf-8" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 20010904//EN" "http://www.w3.org/TR/2001/REC-SVG-20010904/DTD/svg10.dtd"><svg xmlns="http://www.w3.org/2000/svg" width="2307" height="1538" xmlns:xlink="http://www.w3.org/1999/xlink"><source><![CDATA[participant Alice
participant Server
participant Bob

Note over Alice, Server: Generate previsouly long-term keypai \n (x, g*X) (See: OTRv4 spec, section \n "Public keys, Shared Prekeyes and Fingerprints").

Note over Alice: Generates previously user profile (A). \n (See: OTRv4 spec, section "Creating a User Profile").

Note over Server: Generates previously a server profile (S). \n TODO: ???? Maybe the server identity (prekey.xmpp.org) + server public key (or its fingerprint)?

Note over Alice, Server: DAKE

Alice->Alice: Selects ephemeral keypair (i, g*i). \n (See: OTRv4 spec, section "Generating ECDH and DH keys"
Alice->Server: Sends (A, g*i).

Server->Server: Verify if g*i is on curve Ed448. \n (See: OTRv4 spec, section "Generating ECDH and DH keys").
Server->Server: Verify if A is a valid not-expired profile. \n (See: OTRv4 spec, section "Validating a User Profile").
Server->Server: If something fails, abort the DAKE.
Server->Server: Obtain g*I from A. \n (See: OTRv4 section, "User profile").
Server->Server: Selects ephemeral keypair (r, g*r). \n (See: OTRv4 spec, section "Generating ECDH and DH keys"
Server->Server: Computes phi = ??. \n TODO. This could be something related to \n the first message received?
Server->Server: Computes tag t = “0” ∥ KDF_1(0x06 ∥ A, 64) ∥ KDF_1(0x07 ∥ S, 64) ∥ g*i ∥ g*r ∥ KDF_1(0x08 ∥ phi).
Server->Server: Computes sig = RSig(g*R, R, {g*I, g*R, g*i}, t). \n (See: OTRv4 section "Ring Signature Authentication").
Server->Server: Computes k = KDF_1(0x04 ∥ (g*i)*r) and securely erases r.
Server->Alice: Send (S, g*r, sig).

Alice->Alice: Verify if g*r is on curve Ed448. \n (See: OTRv4 spec, section "Generating ECDH and DH keys").
Alice->Alice: Verify if S is a valid server profile. TODO: How?
Alice->Alice: Computes phi = ??.
Alice->Alice: Computes tag t = “0” ∥ KDF_1(0x06 ∥ A, 64) ∥ KDF_1(0x07 ∥ S, 64) ∥ g*i ∥ g*r ∥ KDF_1(0x08 ∥ phi).
Alice->Alice: Verify if sig == RVrf({g*I, g*R, g*i}, t). \n (See: OTRv4 section "Ring Signature Authentication").
Alice->Alice: Computes k = KDF_1(0x04 ∥ (g*r)*i) and securely erases i.
Alice->Alice: Compute t = "1" ∥ KDF_1(0x09 ∥ A, 64) ∥ KDF_1(0x10 ∥ S, 64) ∥ g*i ∥ g*r ∥ KDF_1(0x11 ∥ phi).
Alice->Alice: Computes sig = RSig(g*I, I, {g*I, g*R, g*r}, t)
Alice->Server: Send (sig, prekey messagesm prekey messages MAC). TODO.

Server->Server: Computes phi, t and Verify sig.
Server->Server: If fails, notify.
Server->Server: Otherwise, store prekeys.]]></source><desc></desc><defs><marker viewBox="0 0 5 5" markerWidth="5" markerHeight="5" orient="auto" refX="5" refY="2.5" id="markerArrowBlock"><path d="M 0 0 L 5 2.5 L 0 5 z"></path></marker><marker viewBox="0 0 9.6 16" markerWidth="4" markerHeight="16" orient="auto" refX="9.6" refY="8" id="markerArrowOpen"><path d="M 9.6,8 1.92,16 0,13.7 5.76,8 0,2.286 1.92,0 9.6,8 z"></path></marker></defs><g class="title"></g><g class="actor"><rect x="245" y="20" width="70" height="39" style="stroke-width: 2;" stroke="#000000" fill="#ffffff"></rect><text x="255" y="45" style="font-size: 16px; font-family: Andale\ Mono, monospace;"><tspan x="255">Alice</tspan></text></g><g class="actor"><rect x="245" y="1479.8000106811523" width="70" height="39" style="stroke-width: 2;" stroke="#000000" fill="#ffffff"></rect><text x="255" y="1504.8000106811523" style="font-size: 16px; font-family: Andale\ Mono, monospace;"><tspan x="255">Alice</tspan></text></g><line x1="280" x2="280" y1="59" y2="1479.8000106811523" style="stroke-width: 2;" stroke="#000000" fill="none"></line><g class="actor"><rect x="1226" y="20" width="80" height="39" style="stroke-width: 2;" stroke="#000000" fill="#ffffff"></rect><text x="1236" y="45" style="font-size: 16px; font-family: Andale\ Mono, monospace;"><tspan x="1236">Server</tspan></text></g><g class="actor"><rect x="1226" y="1479.8000106811523" width="80" height="39" style="stroke-width: 2;" stroke="#000000" fill="#ffffff"></rect><text x="1236" y="1504.8000106811523" style="font-size: 16px; font-family: Andale\ Mono, monospace;"><tspan x="1236">Server</tspan></text></g><line x1="1266" x2="1266" y1="59" y2="1479.8000106811523" style="stroke-width: 2;" stroke="#000000" fill="none"></line><g class="actor"><rect x="2227" y="20" width="50" height="39" style="stroke-width: 2;" stroke="#000000" fill="#ffffff"></rect><text x="2237" y="45" style="font-size: 16px; font-family: Andale\ Mono, monospace;"><tspan x="2237">Bob</tspan></text></g><g class="actor"><rect x="2227" y="1479.8000106811523" width="50" height="39" style="stroke-width: 2;" stroke="#000000" fill="#ffffff"></rect><text x="2237" y="1504.8000106811523" style="font-size: 16px; font-family: Andale\ Mono, monospace;"><tspan x="2237">Bob</tspan></text></g><line x1="2252" x2="2252" y1="59" y2="1479.8000106811523" style="stroke-width: 2;" stroke="#000000" fill="none"></line><g class="note"><rect x="270" y="79" width="1006" height="67.4000015258789" style="stroke-width: 2;" stroke="#000000" fill="#ffffff"></rect><text x="275" y="99" style="font-size: 16px; font-family: Andale\ Mono, monospace;"><tspan x="275">Generate previsouly long-term keypai</tspan><tspan dy="1.2em" x="275">(x, g*X) (See: OTRv4 spec, section</tspan><tspan dy="1.2em" x="275">"Public keys, Shared Prekeyes and Fingerprints").</tspan></text></g><g class="note"><rect x="10" y="166.4000015258789" width="540" height="48.20000076293945" style="stroke-width: 2;" stroke="#000000" fill="#ffffff"></rect><text x="15" y="186.4000015258789" style="font-size: 16px; font-family: Andale\ Mono, monospace;"><tspan x="15">Generates previously user profile (A).</tspan><tspan dy="1.2em" x="15">(See: OTRv4 spec, section "Creating a User Profile").</tspan></text></g><g class="note"><rect x="781" y="234.60000228881836" width="970" height="48.20000076293945" style="stroke-width: 2;" stroke="#000000" fill="#ffffff"></rect><text x="786" y="254.60000228881836" style="font-size: 16px; font-family: Andale\ Mono, monospace;"><tspan x="786">Generates previously a server profile (S).</tspan><tspan dy="1.2em" x="786">TODO: ???? Maybe the server identity (prekey.xmpp.org) + server public key (or its fingerprint)?</tspan></text></g><g class="note"><rect x="270" y="302.8000030517578" width="1006" height="29" style="stroke-width: 2;" stroke="#000000" fill="#ffffff"></rect><text x="275" y="322.8000030517578" style="font-size: 16px; font-family: Andale\ Mono, monospace;"><tspan x="275">DAKE</tspan></text></g><g class="signal"><text x="305" y="375.90000343322754" style="font-size: 16px; font-family: Andale\ Mono, monospace;"><tspan x="305">Selects ephemeral keypair (i, g*i).</tspan><tspan dy="1.2em" x="305">(See: OTRv4 spec, section "Generating ECDH and DH keys"</tspan></text><line x1="280" x2="300" y1="351.8000030517578" y2="351.8000030517578" style="stroke-width: 2;" stroke="#000000" fill="none"></line><line x1="300" x2="300" y1="351.8000030517578" y2="395.00000381469727" style="stroke-width: 2;" stroke="#000000" fill="none"></line><line x1="300" x2="280" y1="395.00000381469727" y2="395.00000381469727" style="stroke-width: 2; marker-end: url(&quot;#markerArrowBlock&quot;);" stroke="#000000" fill="none"></line></g><g class="signal"><text x="698" y="420.50000381469727" style="font-size: 16px; font-family: Andale\ Mono, monospace;"><tspan x="698">Sends (A, g*i).</tspan></text><line x1="280" x2="1266" y1="429.00000381469727" y2="429.00000381469727" style="stroke-width: 2; marker-end: url(&quot;#markerArrowBlock&quot;);" stroke="#000000" fill="none"></line></g><g class="signal"><text x="1291" y="473.100004196167" style="font-size: 16px; font-family: Andale\ Mono, monospace;"><tspan x="1291">Verify if g*i is on curve Ed448.</tspan><tspan dy="1.2em" x="1291">(See: OTRv4 spec, section "Generating ECDH and DH keys").</tspan></text><line x1="1266" x2="1286" y1="449.00000381469727" y2="449.00000381469727" style="stroke-width: 2;" stroke="#000000" fill="none"></line><line x1="1286" x2="1286" y1="449.00000381469727" y2="492.2000045776367" style="stroke-width: 2;" stroke="#000000" fill="none"></line><line x1="1286" x2="1266" y1="492.2000045776367" y2="492.2000045776367" style="stroke-width: 2; marker-end: url(&quot;#markerArrowBlock&quot;);" stroke="#000000" fill="none"></line></g><g class="signal"><text x="1291" y="531.3000049591064" style="font-size: 16px; font-family: Andale\ Mono, monospace;"><tspan x="1291">Verify if A is a valid not-expired profile.</tspan><tspan dy="1.2em" x="1291">(See: OTRv4 spec, section "Validating a User Profile").</tspan></text><line x1="1266" x2="1286" y1="507.2000045776367" y2="507.2000045776367" style="stroke-width: 2;" stroke="#000000" fill="none"></line><line x1="1286" x2="1286" y1="507.2000045776367" y2="550.4000053405762" style="stroke-width: 2;" stroke="#000000" fill="none"></line><line x1="1286" x2="1266" y1="550.4000053405762" y2="550.4000053405762" style="stroke-width: 2; marker-end: url(&quot;#markerArrowBlock&quot;);" stroke="#000000" fill="none"></line></g><g class="signal"><text x="1291" y="579.9000053405762" style="font-size: 16px; font-family: Andale\ Mono, monospace;"><tspan x="1291">If something fails, abort the DAKE.</tspan></text><line x1="1266" x2="1286" y1="565.4000053405762" y2="565.4000053405762" style="stroke-width: 2;" stroke="#000000" fill="none"></line><line x1="1286" x2="1286" y1="565.4000053405762" y2="589.4000053405762" style="stroke-width: 2;" stroke="#000000" fill="none"></line><line x1="1286" x2="1266" y1="589.4000053405762" y2="589.4000053405762" style="stroke-width: 2; marker-end: url(&quot;#markerArrowBlock&quot;);" stroke="#000000" fill="none"></line></g><g class="signal"><text x="1291" y="628.5000057220459" style="font-size: 16px; font-family: Andale\ Mono, monospace;"><tspan x="1291">Obtain g*I from A.</tspan><tspan dy="1.2em" x="1291">(See: OTRv4 section, "User profile").</tspan></text><line x1="1266" x2="1286" y1="604.4000053405762" y2="604.4000053405762" style="stroke-width: 2;" stroke="#000000" fill="none"></line><line x1="1286" x2="1286" y1="604.4000053405762" y2="647.6000061035156" style="stroke-width: 2;" stroke="#000000" fill="none"></line><line x1="1286" x2="1266" y1="647.6000061035156" y2="647.6000061035156" style="stroke-width: 2; marker-end: url(&quot;#markerArrowBlock&quot;);" stroke="#000000" fill="none"></line></g><g class="signal"><text x="1291" y="686.7000064849854" style="font-size: 16px; font-family: Andale\ Mono, monospace;"><tspan x="1291">Selects ephemeral keypair (r, g*r).</tspan><tspan dy="1.2em" x="1291">(See: OTRv4 spec, section "Generating ECDH and DH keys"</tspan></text><line x1="1266" x2="1286" y1="662.6000061035156" y2="662.6000061035156" style="stroke-width: 2;" stroke="#000000" fill="none"></line><line x1="1286" x2="1286" y1="662.6000061035156" y2="705.8000068664551" style="stroke-width: 2;" stroke="#000000" fill="none"></line><line x1="1286" x2="1266" y1="705.8000068664551" y2="705.8000068664551" style="stroke-width: 2; marker-end: url(&quot;#markerArrowBlock&quot;);" stroke="#000000" fill="none"></line></g><g class="signal"><text x="1291" y="754.5000076293945" style="font-size: 16px; font-family: Andale\ Mono, monospace;"><tspan x="1291">Computes phi = ??.</tspan><tspan dy="1.2em" x="1291">TODO. This could be something related to</tspan><tspan dy="1.2em" x="1291">the first message received?</tspan></text><line x1="1266" x2="1286" y1="720.8000068664551" y2="720.8000068664551" style="stroke-width: 2;" stroke="#000000" fill="none"></line><line x1="1286" x2="1286" y1="720.8000068664551" y2="783.200008392334" style="stroke-width: 2;" stroke="#000000" fill="none"></line><line x1="1286" x2="1266" y1="783.200008392334" y2="783.200008392334" style="stroke-width: 2; marker-end: url(&quot;#markerArrowBlock&quot;);" stroke="#000000" fill="none"></line></g><g class="signal"><text x="1291" y="812.700008392334" style="font-size: 16px; font-family: Andale\ Mono, monospace;"><tspan x="1291">Computes tag t = “0” ∥ KDF_1(0x06 ∥ A, 64) ∥ KDF_1(0x07 ∥ S, 64) ∥ g*i ∥ g*r ∥ KDF_1(0x08 ∥ phi).</tspan></text><line x1="1266" x2="1286" y1="798.200008392334" y2="798.200008392334" style="stroke-width: 2;" stroke="#000000" fill="none"></line><line x1="1286" x2="1286" y1="798.200008392334" y2="822.200008392334" style="stroke-width: 2;" stroke="#000000" fill="none"></line><line x1="1286" x2="1266" y1="822.200008392334" y2="822.200008392334" style="stroke-width: 2; marker-end: url(&quot;#markerArrowBlock&quot;);" stroke="#000000" fill="none"></line></g><g class="signal"><text x="1291" y="861.3000087738037" style="font-size: 16px; font-family: Andale\ Mono, monospace;"><tspan x="1291">Computes sig = RSig(g*R, R, {g*I, g*R, g*i}, t).</tspan><tspan dy="1.2em" x="1291">(See: OTRv4 section "Ring Signature Authentication").</tspan></text><line x1="1266" x2="1286" y1="837.200008392334" y2="837.200008392334" style="stroke-width: 2;" stroke="#000000" fill="none"></line><line x1="1286" x2="1286" y1="837.200008392334" y2="880.4000091552734" style="stroke-width: 2;" stroke="#000000" fill="none"></line><line x1="1286" x2="1266" y1="880.4000091552734" y2="880.4000091552734" style="stroke-width: 2; marker-end: url(&quot;#markerArrowBlock&quot;);" stroke="#000000" fill="none"></line></g><g class="signal"><text x="1291" y="909.9000091552734" style="font-size: 16px; font-family: Andale\ Mono, monospace;"><tspan x="1291">Computes k = KDF_1(0x04 ∥ (g*i)*r) and securely erases r.</tspan></text><line x1="1266" x2="1286" y1="895.4000091552734" y2="895.4000091552734" style="stroke-width: 2;" stroke="#000000" fill="none"></line><line x1="1286" x2="1286" y1="895.4000091552734" y2="919.4000091552734" style="stroke-width: 2;" stroke="#000000" fill="none"></line><line x1="1286" x2="1266" y1="919.4000091552734" y2="919.4000091552734" style="stroke-width: 2; marker-end: url(&quot;#markerArrowBlock&quot;);" stroke="#000000" fill="none"></line></g><g class="signal"><text x="678" y="944.9000091552734" style="font-size: 16px; font-family: Andale\ Mono, monospace;"><tspan x="678">Send (S, g*r, sig).</tspan></text><line x1="1266" x2="280" y1="953.4000091552734" y2="953.4000091552734" style="stroke-width: 2; marker-end: url(&quot;#markerArrowBlock&quot;);" stroke="#000000" fill="none"></line></g><g class="signal"><text x="305" y="997.5000095367432" style="font-size: 16px; font-family: Andale\ Mono, monospace;"><tspan x="305">Verify if g*r is on curve Ed448.</tspan><tspan dy="1.2em" x="305">(See: OTRv4 spec, section "Generating ECDH and DH keys").</tspan></text><line x1="280" x2="300" y1="973.4000091552734" y2="973.4000091552734" style="stroke-width: 2;" stroke="#000000" fill="none"></line><line x1="300" x2="300" y1="973.4000091552734" y2="1016.6000099182129" style="stroke-width: 2;" stroke="#000000" fill="none"></line><line x1="300" x2="280" y1="1016.6000099182129" y2="1016.6000099182129" style="stroke-width: 2; marker-end: url(&quot;#markerArrowBlock&quot;);" stroke="#000000" fill="none"></line></g><g class="signal"><text x="305" y="1046.100009918213" style="font-size: 16px; font-family: Andale\ Mono, monospace;"><tspan x="305">Verify if S is a valid server profile. TODO: How?</tspan></text><line x1="280" x2="300" y1="1031.600009918213" y2="1031.600009918213" style="stroke-width: 2;" stroke="#000000" fill="none"></line><line x1="300" x2="300" y1="1031.600009918213" y2="1055.600009918213" style="stroke-width: 2;" stroke="#000000" fill="none"></line><line x1="300" x2="280" y1="1055.600009918213" y2="1055.600009918213" style="stroke-width: 2; marker-end: url(&quot;#markerArrowBlock&quot;);" stroke="#000000" fill="none"></line></g><g class="signal"><text x="305" y="1085.100009918213" style="font-size: 16px; font-family: Andale\ Mono, monospace;"><tspan x="305">Computes phi = ??.</tspan></text><line x1="280" x2="300" y1="1070.600009918213" y2="1070.600009918213" style="stroke-width: 2;" stroke="#000000" fill="none"></line><line x1="300" x2="300" y1="1070.600009918213" y2="1094.600009918213" style="stroke-width: 2;" stroke="#000000" fill="none"></line><line x1="300" x2="280" y1="1094.600009918213" y2="1094.600009918213" style="stroke-width: 2; marker-end: url(&quot;#markerArrowBlock&quot;);" stroke="#000000" fill="none"></line></g><g class="signal"><text x="305" y="1124.100009918213" style="font-size: 16px; font-family: Andale\ Mono, monospace;"><tspan x="305">Computes tag t = “0” ∥ KDF_1(0x06 ∥ A, 64) ∥ KDF_1(0x07 ∥ S, 64) ∥ g*i ∥ g*r ∥ KDF_1(0x08 ∥ phi).</tspan></text><line x1="280" x2="300" y1="1109.600009918213" y2="1109.600009918213" style="stroke-width: 2;" stroke="#000000" fill="none"></line><line x1="300" x2="300" y1="1109.600009918213" y2="1133.600009918213" style="stroke-width: 2;" stroke="#000000" fill="none"></line><line x1="300" x2="280" y1="1133.600009918213" y2="1133.600009918213" style="stroke-width: 2; marker-end: url(&quot;#markerArrowBlock&quot;);" stroke="#000000" fill="none"></line></g><g class="signal"><text x="305" y="1172.7000102996826" style="font-size: 16px; font-family: Andale\ Mono, monospace;"><tspan x="305">Verify if sig == RVrf({g*I, g*R, g*i}, t).</tspan><tspan dy="1.2em" x="305">(See: OTRv4 section "Ring Signature Authentication").</tspan></text><line x1="280" x2="300" y1="1148.600009918213" y2="1148.600009918213" style="stroke-width: 2;" stroke="#000000" fill="none"></line><line x1="300" x2="300" y1="1148.600009918213" y2="1191.8000106811523" style="stroke-width: 2;" stroke="#000000" fill="none"></line><line x1="300" x2="280" y1="1191.8000106811523" y2="1191.8000106811523" style="stroke-width: 2; marker-end: url(&quot;#markerArrowBlock&quot;);" stroke="#000000" fill="none"></line></g><g class="signal"><text x="305" y="1221.3000106811523" style="font-size: 16px; font-family: Andale\ Mono, monospace;"><tspan x="305">Computes k = KDF_1(0x04 ∥ (g*r)*i) and securely erases i.</tspan></text><line x1="280" x2="300" y1="1206.8000106811523" y2="1206.8000106811523" style="stroke-width: 2;" stroke="#000000" fill="none"></line><line x1="300" x2="300" y1="1206.8000106811523" y2="1230.8000106811523" style="stroke-width: 2;" stroke="#000000" fill="none"></line><line x1="300" x2="280" y1="1230.8000106811523" y2="1230.8000106811523" style="stroke-width: 2; marker-end: url(&quot;#markerArrowBlock&quot;);" stroke="#000000" fill="none"></line></g><g class="signal"><text x="305" y="1260.3000106811523" style="font-size: 16px; font-family: Andale\ Mono, monospace;"><tspan x="305">Compute t = "1" ∥ KDF_1(0x09 ∥ A, 64) ∥ KDF_1(0x10 ∥ S, 64) ∥ g*i ∥ g*r ∥ KDF_1(0x11 ∥ phi).</tspan></text><line x1="280" x2="300" y1="1245.8000106811523" y2="1245.8000106811523" style="stroke-width: 2;" stroke="#000000" fill="none"></line><line x1="300" x2="300" y1="1245.8000106811523" y2="1269.8000106811523" style="stroke-width: 2;" stroke="#000000" fill="none"></line><line x1="300" x2="280" y1="1269.8000106811523" y2="1269.8000106811523" style="stroke-width: 2; marker-end: url(&quot;#markerArrowBlock&quot;);" stroke="#000000" fill="none"></line></g><g class="signal"><text x="305" y="1299.3000106811523" style="font-size: 16px; font-family: Andale\ Mono, monospace;"><tspan x="305">Computes sig = RSig(g*I, I, {g*I, g*R, g*r}, t)</tspan></text><line x1="280" x2="300" y1="1284.8000106811523" y2="1284.8000106811523" style="stroke-width: 2;" stroke="#000000" fill="none"></line><line x1="300" x2="300" y1="1284.8000106811523" y2="1308.8000106811523" style="stroke-width: 2;" stroke="#000000" fill="none"></line><line x1="300" x2="280" y1="1308.8000106811523" y2="1308.8000106811523" style="stroke-width: 2; marker-end: url(&quot;#markerArrowBlock&quot;);" stroke="#000000" fill="none"></line></g><g class="signal"><text x="498" y="1334.3000106811523" style="font-size: 16px; font-family: Andale\ Mono, monospace;"><tspan x="498">Send (sig, prekey messagesm prekey messages MAC). TODO.</tspan></text><line x1="280" x2="1266" y1="1342.8000106811523" y2="1342.8000106811523" style="stroke-width: 2; marker-end: url(&quot;#markerArrowBlock&quot;);" stroke="#000000" fill="none"></line></g><g class="signal"><text x="1291" y="1377.3000106811523" style="font-size: 16px; font-family: Andale\ Mono, monospace;"><tspan x="1291">Computes phi, t and Verify sig.</tspan></text><line x1="1266" x2="1286" y1="1362.8000106811523" y2="1362.8000106811523" style="stroke-width: 2;" stroke="#000000" fill="none"></line><line x1="1286" x2="1286" y1="1362.8000106811523" y2="1386.8000106811523" style="stroke-width: 2;" stroke="#000000" fill="none"></line><line x1="1286" x2="1266" y1="1386.8000106811523" y2="1386.8000106811523" style="stroke-width: 2; marker-end: url(&quot;#markerArrowBlock&quot;);" stroke="#000000" fill="none"></line></g><g class="signal"><text x="1291" y="1416.3000106811523" style="font-size: 16px; font-family: Andale\ Mono, monospace;"><tspan x="1291">If fails, notify.</tspan></text><line x1="1266" x2="1286" y1="1401.8000106811523" y2="1401.8000106811523" style="stroke-width: 2;" stroke="#000000" fill="none"></line><line x1="1286" x2="1286" y1="1401.8000106811523" y2="1425.8000106811523" style="stroke-width: 2;" stroke="#000000" fill="none"></line><line x1="1286" x2="1266" y1="1425.8000106811523" y2="1425.8000106811523" style="stroke-width: 2; marker-end: url(&quot;#markerArrowBlock&quot;);" stroke="#000000" fill="none"></line></g><g class="signal"><text x="1291" y="1455.3000106811523" style="font-size: 16px; font-family: Andale\ Mono, monospace;"><tspan x="1291">Otherwise, store prekeys.</tspan></text><line x1="1266" x2="1286" y1="1440.8000106811523" y2="1440.8000106811523" style="stroke-width: 2;" stroke="#000000" fill="none"></line><line x1="1286" x2="1286" y1="1440.8000106811523" y2="1464.8000106811523" style="stroke-width: 2;" stroke="#000000" fill="none"></line><line x1="1286" x2="1266" y1="1464.8000106811523" y2="1464.8000106811523" style="stroke-width: 2; marker-end: url(&quot;#markerArrowBlock&quot;);" stroke="#000000" fill="none"></line></g></svg>